[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cognitive-workspace-backend"
version = "0.1.0"
description = "Backend services for Cognitive Workspace"
requires-python = ">=3.9"
license = {text = "GPL-3.0-or-later"}
readme = "README.md"
dependencies = [
    "fastapi>=0.100.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.8.1",
    "uvicorn>=0.22.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "httpx>=0.24.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
plugins = ["pydantic.mypy"]

[tool.ruff]
line-length = 100
target-version = "py39"
select = ["E", "F", "I", "N", "B", "C4", "SIM", "ERA", "PL"]
ignore = []
fix = true

[tool.ruff.isort]
known-third-party = ["fastapi", "pydantic"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.uv]
# UV tool configuration
pip = { upgrade = true, no-binary = [] }
